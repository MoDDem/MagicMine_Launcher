<Window x:Class="MagicMine_Launcher.View.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MagicMine_Launcher.View" 
        xmlns:pageView="clr-namespace:MagicMine_Launcher.View.Pages"
        xmlns:pageVM="clr-namespace:MagicMine_Launcher.ViewModel.Pages" 
        xmlns:ViewModels="clr-namespace:MagicMine_Launcher.ViewModel" 
        xmlns:components="clr-namespace:MagicMine_Launcher.Components"
        mc:Ignorable="d"
        Title="MagicMine Launcher" Height="480" Width="840" MinHeight="480" MinWidth="840">
    <Window.Resources>
        <components:InverseBoolConverter x:Key="InverseBool"/>
        <DataTemplate DataType="{x:Type pageVM:HomeViewModel}">
            <pageView:HomeView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type pageVM:LoginViewModel}">
            <pageView:LoginView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type pageVM:SettingsViewModel}">
            <pageView:SettingsView/>
        </DataTemplate>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <StackPanel Grid.Column="0" Name="PageNavigation" Background="#232931">
            <Grid Name="UserCard" Margin="0, 0, 0, 2" Background="#263238">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>

                <Image Grid.RowSpan="2" Grid.Column="0" Width="50" Height="50"/>

                <TextBlock Grid.Row="0" Grid.Column="1" FontSize="18" VerticalAlignment="Bottom" Foreground="#eee">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <Setter Property="Text" Value="{Binding UserVM.SelectedUser.Name}"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding UserVM.SelectedUser}" Value="{x:Null}">
                                    <Setter Property="Text" Value="Guest"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
                <StackPanel Grid.Row="1" Grid.Column="1" Orientation="Horizontal" Margin="0, 0, 2, 0">
                    <Button Margin="0, 0, 5, 0" Padding="8, 3" FontSize="14" Foreground="#232931" BorderThickness="0">
                        <Button.Style>
                            <Style TargetType="Button">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding UserVM.SelectedUser.IsValid}" Value="True">
                                        <Setter Property="Background" Value="#4ecca3"/>
                                        <Setter Property="Content" Value="Valid"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding UserVM.SelectedUser.IsValid}" Value="False">
                                        <Setter Property="Background" Value="#fa4252"/>
                                        <Setter Property="Content" Value="Invalid"/>
                                        <Setter Property="Command" Value="{Binding UserVM.ValidateUserCommand}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding UserVM.SelectedUser}" Value="{x:Null}">
                                        <Setter Property="Background" Value="#fa4252"/>
                                        <Setter Property="Content" Value="Invalid"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <TextBlock VerticalAlignment="Center" FontSize="14" Padding="5, 3">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding UserVM.SelectedUser.IsInGame}" Value="True">
                                        <Setter Property="Foreground" Value="#eee"/>
                                        <Setter Property="Text" Value="InGame"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding UserVM.SelectedUser.IsInGame}" Value="False">
                                        <Setter Property="Foreground" Value="#eeeede"/>
                                        <Setter Property="Text" Value="Offline"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding UserVM.SelectedUser}" Value="{x:Null}">
                                        <Setter Property="Foreground" Value="#eeeede"/>
                                        <Setter Property="Text" Value="Offline"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </StackPanel>

                <Grid Grid.RowSpan="2" Grid.Column="3">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Button Content="Add new" Command="{Binding OpenLoginPage}" Grid.Row="0" Background="Transparent" Foreground="White" BorderThickness="0" Padding="3,0"/>
                    <Button Content="Logout" Command="{Binding UserVM.LogoutUserCommand}" Grid.Row="1" Background="Transparent" Foreground="White" BorderThickness="0" Padding="3,0"/>
                </Grid>
                <StackPanel Grid.Row="3" Grid.ColumnSpan="3" Orientation="Vertical" x:Name="AuthUserList" MinWidth="180" SizeChanged="AuthUserList_SizeChanged">
                    <StackPanel.Style>
                        <Style TargetType="StackPanel">
                            <Style.Resources>
                                <Style TargetType="ListBox">
                                    <Setter Property="Height" Value="0"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding UserVM.IsUserListOpened}" Value="True">
                                            <Setter Property="Height" Value="auto"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                                <Style TargetType="Button">
                                    <Setter Property="BorderThickness" Value="0"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding UserVM.IsUserListOpened}" Value="True">
                                            <Setter Property="BorderThickness" Value="2, 0, 2, 2"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Style.Resources>
                        </Style>
                    </StackPanel.Style>
                    <ListBox BorderThickness="2, 2, 2, 0" BorderBrush="#4ecca3" Background="#232931" HorizontalContentAlignment="Stretch" ItemsSource="{Binding UserVM.Users}" SelectedItem="{Binding UserVM.SelectedUser}">
                        <ListBox.ItemContainerStyle>
                            <Style TargetType="{x:Type ListBoxItem}">
                                <Setter Property="BorderThickness" Value="0"/>
                                <Setter Property="Padding" Value="0"/>
                                <Setter Property="Cursor" Value="Hand"/>
                            </Style>
                        </ListBox.ItemContainerStyle>
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Grid Background="#232931">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="auto"/>
                                        <RowDefinition Height="2"/>
                                    </Grid.RowDefinitions>
                                    <TextBlock Grid.Row="0" FontSize="18" Foreground="#eee" Text="{Binding Name}"/>
                                    <TextBlock Grid.Row="1" FontSize="14" Foreground="#eee" Text="{Binding ID}" MaxWidth="100"/>
                                </Grid>
                                <DataTemplate.Triggers>
                                    <DataTrigger Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType=ListBoxItem}}" Value="True">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                    <Button Command="{Binding UserVM.UserListStateCommand}" BorderBrush="#4ecca3" Content="^" VerticalContentAlignment="Bottom" Padding="0, 5, 0, 0" Background="#66242632" Foreground="White"/>
                </StackPanel>
            </Grid>

            <Border BorderThickness="1" BorderBrush="Black"/>

            <WrapPanel Orientation="Vertical" HorizontalAlignment="Stretch" Margin="5">
                <Label Content="Search in this tab..." Foreground="LightGray" Margin="0, -25.6, 0, 0" IsHitTestVisible="False" Panel.ZIndex="2" Background="Transparent" RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Left">
                    <Label.RenderTransform>
                        <TransformGroup>
                            <TranslateTransform Y="28.5" X="-1"/>
                        </TransformGroup>
                    </Label.RenderTransform>
                    <Label.Style>
                        <Style TargetType="Label">
                            <Setter Property="Visibility" Value="Hidden"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=SearchBox, UpdateSourceTrigger=PropertyChanged, Path=Text.Length}" Value="0">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Label.Style>
                </Label>
                <TextBox Name="SearchBox" BorderThickness="0" Background="#393e46" Foreground="LightGray" Padding="2, 8" Width="{Binding ActualWidth, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type WrapPanel}}}" VerticalContentAlignment="Center"/>
            </WrapPanel>

            <DockPanel HorizontalAlignment="Stretch" DataContext="{Binding NavigationVM}">
                <ListBox DockPanel.Dock="Top" BorderThickness="0" Name="NavigationButtons" Background="Transparent" HorizontalContentAlignment="Stretch" ItemsSource="{Binding Pages}" SelectedItem="{Binding SelectedPage}">
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="{x:Type ListBoxItem}">
                            <Setter Property="Padding" Value="0"/>
                            <Setter Property="Cursor" Value="Hand"/>
                            <Setter Property="BorderThickness" Value="0, 0, 0, 1"/>
                            <Setter Property="Foreground" Value="#eee"/>
                            <Setter Property="Focusable" Value="{Binding DataContext.BlockNavigation, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}}, Converter={StaticResource InverseBool}}"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsHidden}" Value="True">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ListBox.ItemContainerStyle>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="2"/>
                                </Grid.RowDefinitions>
                                <TextBlock Grid.Row="0" Padding="2" FontSize="18" Text="{Binding Title}"/>
                            </Grid>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>

                <StackPanel Orientation="Vertical">
                    <Line X1="0" Y1="0" X2="120" Y2="0" Stroke="#eee" StrokeThickness="3" Margin="0, 5, 0, 2" HorizontalAlignment="Center"/>
                    <TextBlock Text="MagicMine Launcher" FontSize="16" Foreground="#eee" HorizontalAlignment="Center"/>
                    <TextBlock Text="Made by: MoDDem" FontSize="16" Foreground="#eee" HorizontalAlignment="Center"/>
                    <TextBlock Text="Copyright© 2019-2020" FontSize="16" Foreground="#eee" HorizontalAlignment="Center"/>
                </StackPanel>
            </DockPanel>
        </StackPanel>
        <Border Padding="5" Grid.Column="1" Background="#393e46" DataContext="{Binding NavigationVM}">
            <ContentControl Content="{Binding SelectedPage.ViewModel}" Foreground="#eee"></ContentControl>
        </Border>
    </Grid>
</Window>