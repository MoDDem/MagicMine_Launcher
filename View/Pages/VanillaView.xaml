<UserControl x:Class="MagicMine_Launcher.View.Pages.VanillaView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:local="clr-namespace:MagicMine_Launcher.View.Pages"
             xmlns:components="clr-namespace:MagicMine_Launcher.Components"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <components:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" TrueValue="Visible" FalseValue="Collapsed"/>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Border Grid.Row="0" Background="#232931" Margin="0, 0, 0, 5" HorizontalAlignment="Stretch">
            <Border.Style>
                <Style TargetType="Border">
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="BorderBrush" Value="Azure"/>
                    <Setter Property="Padding" Value="0,4"/>
                </Style>
            </Border.Style>
            <WrapPanel Orientation="Horizontal" HorizontalAlignment="Center">
                <WrapPanel.Resources>
                    <Style TargetType="ToggleButton">
                        <Setter Property="Padding" Value="10, 5"/>
                        <Setter Property="Margin" Value="0, 0, 5, 0"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="Cursor" Value="Hand"/>
                    </Style>
                </WrapPanel.Resources>
                <ToggleButton Content="Release" IsChecked="{Binding SelectedCategories[0], NotifyOnSourceUpdated=True, Mode=TwoWay}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Checked">
                            <i:InvokeCommandAction Command="{Binding UpdateInstanceCategory}" CommandParameter="+Release"/>
                        </i:EventTrigger>
                        <i:EventTrigger EventName="Unchecked">
                            <i:InvokeCommandAction Command="{Binding UpdateInstanceCategory}" CommandParameter="-Release"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ToggleButton>
                <ToggleButton Content="Snapshot" IsChecked="{Binding SelectedCategories[1], NotifyOnSourceUpdated=True, Mode=TwoWay}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Checked">
                            <i:InvokeCommandAction Command="{Binding UpdateInstanceCategory}" CommandParameter="+Snapshot"/>
                        </i:EventTrigger>
                        <i:EventTrigger EventName="Unchecked">
                            <i:InvokeCommandAction Command="{Binding UpdateInstanceCategory}" CommandParameter="-Snapshot"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ToggleButton>
                <ToggleButton Content="Beta" IsChecked="{Binding SelectedCategories[2], NotifyOnSourceUpdated=True, Mode=TwoWay}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Checked">
                            <i:InvokeCommandAction Command="{Binding UpdateInstanceCategory}" CommandParameter="+Beta"/>
                        </i:EventTrigger>
                        <i:EventTrigger EventName="Unchecked">
                            <i:InvokeCommandAction Command="{Binding UpdateInstanceCategory}" CommandParameter="-Beta"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ToggleButton>
                <ToggleButton Content="Alpha" IsChecked="{Binding SelectedCategories[3], NotifyOnSourceUpdated=True, Mode=TwoWay}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Checked">
                            <i:InvokeCommandAction Command="{Binding UpdateInstanceCategory}" CommandParameter="+Alpha"/>
                        </i:EventTrigger>
                        <i:EventTrigger EventName="Unchecked">
                            <i:InvokeCommandAction Command="{Binding UpdateInstanceCategory}" CommandParameter="-Alpha"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ToggleButton>
            </WrapPanel>
        </Border>
        <ScrollViewer HorizontalAlignment="Stretch" Grid.Row="1">
            <ItemsControl HorizontalAlignment="Stretch" ItemsSource="{Binding SortedInstances}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Border Background="#232931" BorderBrush="#4ecca3" BorderThickness="2" CornerRadius="2" Margin="0, 0, 5, 10" Opacity="0">
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Style.Triggers>
                                        <EventTrigger RoutedEvent="Border.Loaded">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimationUsingKeyFrames Duration="00:00:01" Storyboard.TargetProperty="Opacity">
                                                        <EasingDoubleKeyFrame KeyTime="00:00:01" Value="1">
                                                            <EasingDoubleKeyFrame.EasingFunction>
                                                                <BackEase EasingMode="EaseOut"/>
                                                            </EasingDoubleKeyFrame.EasingFunction>
                                                        </EasingDoubleKeyFrame>
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="100"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="30"/>
                                    <RowDefinition Height="30"/>
                                    <RowDefinition Height="40"/>
                                </Grid.RowDefinitions>
                                <Image Source="{Binding Image}" Grid.Column="0" Grid.RowSpan="3" Margin="0, 0, 0, 1"/>

                                <TextBlock Text="{Binding Title}" Grid.Row="0" Grid.Column="1" FontSize="20" Foreground="#eee" VerticalAlignment="Bottom" Margin="5, 0, 0, 0"/>

                                <StackPanel Orientation="Horizontal" Grid.Row="1" Grid.Column="1" VerticalAlignment="Bottom" Margin="5, 0, 0, 0">
                                    <TextBlock Text="Version:" FontSize="18" Foreground="#eee"/>
                                    <Button Content="{Binding Version}" FontSize="18">
                                        <Button.Style>
                                            <Style TargetType="{x:Type Button}">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Border Background="Transparent" BorderBrush="#00adb5" BorderThickness="{TemplateBinding BorderThickness}" Margin="3, 0">
                                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                            </Border>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="Foreground" Value="#eee"/>
                                                <Setter Property="FontSize" Value="17"/>
                                                <Setter Property="BorderThickness" Value="0, 0, 0, 2"/>
                                                <Setter Property="Margin" Value="0, .4, 0, 0"/>
                                                <Setter Property="Cursor" Value="Hand"/>
                                                <Style.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Foreground" Value="#00adb5"/>
                                                        <Setter Property="BorderThickness" Value="0"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                    </Button>

                                    <TextBlock Text="Type:" FontSize="18" Foreground="#eee"/>
                                    <Button Content="{Binding Type}" FontSize="18">
                                        <Button.Style>
                                            <Style TargetType="{x:Type Button}">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Border Background="Transparent" BorderBrush="#00adb5" BorderThickness="{TemplateBinding BorderThickness}" Margin="3, 0">
                                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                            </Border>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="Command" Value="{Binding DataContext.UpdateInstanceCategory, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ScrollViewer}}}"/>
                                                <Setter Property="Foreground" Value="#eee"/>
                                                <Setter Property="FontSize" Value="17"/>
                                                <Setter Property="BorderThickness" Value="0, 0, 0, 2"/>
                                                <Setter Property="Margin" Value="0, .4, 0, 0"/>
                                                <Setter Property="Cursor" Value="Hand"/>
                                                <Style.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Foreground" Value="#00adb5"/>
                                                        <Setter Property="BorderThickness" Value="0"/>
                                                    </Trigger>
                                                    <DataTrigger Binding="{Binding Type}" Value="Release">
                                                        <Setter Property="CommandParameter" Value="*Release"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Type}" Value="Snapshot">
                                                        <Setter Property="CommandParameter" Value="*Snapshot"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Type}" Value="Beta">
                                                        <Setter Property="CommandParameter" Value="*Beta"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Type}" Value="Alpha">
                                                        <Setter Property="CommandParameter" Value="*Alpha"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                    </Button>
                                </StackPanel>

                                <StackPanel Orientation="Horizontal" Grid.Row="2" Grid.Column="1" VerticalAlignment="Bottom">
                                    <StackPanel.Style>
                                        <Style TargetType="StackPanel">
                                            <Setter Property="Margin" Value="0, 0, 0, 1"/>
                                            <Style.Resources>
                                                <Style TargetType="Button">
                                                    <Setter Property="Padding" Value="4,8"/>
                                                    <Setter Property="Margin" Value="5, 0, 0, 0"/>
                                                    <Setter Property="BorderThickness" Value="0"/>
                                                    <Setter Property="Foreground" Value="#eee"/>
                                                    <Setter Property="Background" Value="#393e46"/>
                                                    <Setter Property="Cursor" Value="Hand"/>
                                                </Style>
                                            </Style.Resources>
                                        </Style>
                                    </StackPanel.Style>
                                    <Button Content="Play Instance"/>
                                    <Button Content="Clone"/>
                                    <Button Content="Backup"/>
                                    <Button Content="Reinstall"/>
                                    <Button Content="Settings"/>
                                    <Button Content="Open Folder"/>
                                    <Button Content="Delete"/>
                                </StackPanel>
                            </Grid>
                        </Border>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </ScrollViewer>
        <Canvas Grid.RowSpan="2" Margin="-5" HorizontalAlignment="Stretch" Background="#000" Opacity=".85" Visibility="{Binding IsProcessing, Converter={StaticResource BoolToVisibilityConverter}}">
            <Grid Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=Canvas, Mode=FindAncestor}}" Height="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType=Canvas, Mode=FindAncestor}}">
                <StackPanel Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center">
                    <TextBlock Text="{Binding ProcessingStatus}" Foreground="#fff" FontSize="22"/>
                </StackPanel>
            </Grid>
        </Canvas>
    </Grid>
</UserControl>
